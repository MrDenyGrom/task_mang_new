package com.example.taskmanagement.controller;

import com.example.taskmanagement.dto.ErrorResponseDto;
import jakarta.servlet.http.HttpServletRequest;
import lombok.extern.slf4j.Slf4j;
import org.springframework.dao.DataIntegrityViolationException;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.security.access.AccessDeniedException;
import org.springframework.validation.FieldError;
import org.springframework.web.bind.MethodArgumentNotValidException;
import org.springframework.web.bind.annotation.ControllerAdvice;
import org.springframework.web.bind.annotation.ExceptionHandler;
import org.springframework.web.server.ResponseStatusException;

import java.time.LocalDateTime;
import java.util.List;
import java.util.stream.Collectors;

/**
 * <p><b>–ì–ª–æ–±–∞–ª—å–Ω—ã–π –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –ò—Å–∫–ª—é—á–µ–Ω–∏–π</b></p>
 * <p>
 *     –ï–¥–∏–Ω–∞—è —Ç–æ—á–∫–∞ –¥–ª—è —Ü–µ–Ω—Ç—Ä–∞–ª–∏–∑–æ–≤–∞–Ω–Ω–æ–π –æ–±—Ä–∞–±–æ—Ç–∫–∏ –≤—Å–µ—Ö –∏—Å–∫–ª—é—á–µ–Ω–∏–π, –≤–æ–∑–Ω–∏–∫–∞—é—â–∏—Ö –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏.
 *     –ì–∞—Ä–∞–Ω—Ç–∏—Ä—É–µ—Ç, —á—Ç–æ –∫–ª–∏–µ–Ω—Ç—ã –≤—Å–µ–≥–¥–∞ –ø–æ–ª—É—á–∞—é—Ç —Å—Ç–∞–Ω–¥–∞—Ä—Ç–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ç–∏–≤–Ω—ã–π –æ—Ç–≤–µ—Ç –æ–± –æ—à–∏–±–∫–µ –≤ —Ñ–æ—Ä–º–∞—Ç–µ {@link ErrorResponseDto}.
 *     –õ–æ–≥–∏—Ä—É–µ—Ç –≤—Å–µ –æ—à–∏–±–∫–∏ –¥–ª—è –¥–∞–ª—å–Ω–µ–π—à–µ–≥–æ –∞–Ω–∞–ª–∏–∑–∞.
 * </p>
 */
@ControllerAdvice
@Slf4j
public class GlobalExceptionHandler {

    /**
     * <p><b>–û–±—Ä–∞–±–æ—Ç–∫–∞ –±–∏–∑–Ω–µ—Å-–∏—Å–∫–ª—é—á–µ–Ω–∏–π ({@link ResponseStatusException}) üö¶</b></p>
     * <p>
     *     –õ–æ–≤–∏—Ç –∏—Å–∫–ª—é—á–µ–Ω–∏—è, –±—Ä–æ—à–µ–Ω–Ω—ã–µ –∏–∑ —Å–µ—Ä–≤–∏—Å–Ω–æ–≥–æ —Å–ª–æ—è (–Ω–∞—à–∞ –±–∏–∑–Ω–µ—Å-–ª–æ–≥–∏–∫–∞),
     *     –Ω–∞–ø—Ä–∏–º–µ—Ä, "–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω", "email —É–∂–µ –∑–∞–Ω—è—Ç", "–Ω–µ–≤–µ—Ä–Ω—ã–π –ø–∞—Ä–æ–ª—å".
     *     –≠—Ç–∏ –∏—Å–∫–ª—é—á–µ–Ω–∏—è —Å–æ–¥–µ—Ä–∂–∞—Ç HTTP —Å—Ç–∞—Ç—É—Å –∏ —Å–æ–æ–±—â–µ–Ω–∏–µ, –∫–æ—Ç–æ—Ä—ã–µ –Ω–µ–ø–æ—Å—Ä–µ–¥—Å—Ç–≤–µ–Ω–Ω–æ
     *     –ø–µ—Ä–µ–¥–∞—é—Ç—Å—è –≤ –æ—Ç–≤–µ—Ç –∫–ª–∏–µ–Ω—Ç—É.
     * </p>
     *
     * @param ex {@link ResponseStatusException} - –∏—Å–∫–ª—é—á–µ–Ω–∏–µ, —Å–æ–¥–µ—Ä–∂–∞—â–µ–µ HTTP —Å—Ç–∞—Ç—É—Å –∏ –ø—Ä–∏—á–∏–Ω—É.
     * @param request {@link HttpServletRequest} - —Ç–µ–∫—É—â–∏–π HTTP –∑–∞–ø—Ä–æ—Å.
     * @return {@link ResponseEntity} —Å {@link ErrorResponseDto} –∏ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–º HTTP —Å—Ç–∞—Ç—É—Å–æ–º.
     */
    @ExceptionHandler(ResponseStatusException.class)
    public ResponseEntity<ErrorResponseDto> handleResponseStatusException(ResponseStatusException ex, HttpServletRequest request) {
        HttpStatus status = (HttpStatus) ex.getStatusCode();
        ErrorResponseDto errorResponse = ErrorResponseDto.builder()
                .status(status.value())
                .error(status.getReasonPhrase())
                .message(ex.getReason())
                .path(request.getRequestURI())
                .timestamp(LocalDateTime.now())
                .build();

        log.warn("üö® –ë–∏–∑–Ω–µ—Å-–∏—Å–∫–ª—é—á–µ–Ω–∏–µ –ø–µ—Ä–µ—Ö–≤–∞—á–µ–Ω–æ: –°—Ç–∞—Ç—É—Å={} - '{}', –°–æ–æ–±—â–µ–Ω–∏–µ='{}', –ü—É—Ç—å='{}'",
                status.value(), status.getReasonPhrase(), ex.getReason(), request.getRequestURI());
        return new ResponseEntity<>(errorResponse, status);
    }

    /**
     * <p><b>–û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫ –≤–∞–ª–∏–¥–∞—Ü–∏–∏ ({@link MethodArgumentNotValidException}) üìù</b></p>
     * <p>
     *     –°—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç, –∫–æ–≥–¥–∞ –≤—Ö–æ–¥—è—â–∏–µ –∑–∞–ø—Ä–æ—Å—ã –Ω–µ –ø—Ä–æ—Ö–æ–¥—è—Ç –≤–∞–ª–∏–¥–∞—Ü–∏—é (–Ω–∞–ø—Ä–∏–º–µ—Ä, –∏–∑-–∑–∞ –∞–Ω–Ω–æ—Ç–∞—Ü–∏–π `@Valid`, `@NotBlank`, `@Size`).
     *     –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å—Ç–∞—Ç—É—Å 400 Bad Request –∏ –ø–æ–¥—Ä–æ–±–Ω—ã–π —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –ø–æ–ª–µ–π, –≤—ã–∑–≤–∞–≤—à–∏—Ö –æ—à–∏–±–∫—É,
     *     —á—Ç–æ–±—ã –∫–ª–∏–µ–Ω—Ç –º–æ–≥ —Ç–æ—á–Ω–æ –ø–æ–Ω—è—Ç—å, —á—Ç–æ –Ω—É–∂–Ω–æ –∏—Å–ø—Ä–∞–≤–∏—Ç—å.
     * </p>
     *
     * @param ex {@link MethodArgumentNotValidException} - –∏—Å–∫–ª—é—á–µ–Ω–∏–µ, —Å–æ–¥–µ—Ä–∂–∞—â–µ–µ –æ—à–∏–±–∫–∏ –≤–∞–ª–∏–¥–∞—Ü–∏–∏.
     * @param request {@link HttpServletRequest} - —Ç–µ–∫—É—â–∏–π HTTP –∑–∞–ø—Ä–æ—Å.
     * @return {@link ResponseEntity} —Å {@link ErrorResponseDto} –∏ —Å–ø–∏—Å–∫–æ–º {@link ErrorResponseDto.ErrorDetail}.
     */
    @ExceptionHandler(MethodArgumentNotValidException.class)
    public ResponseEntity<ErrorResponseDto> handleValidationExceptions(MethodArgumentNotValidException ex, HttpServletRequest request) {
        HttpStatus status = HttpStatus.BAD_REQUEST;

        List<ErrorResponseDto.ErrorDetail> errors = ex.getBindingResult().getAllErrors().stream()
                .map(error -> {
                    String fieldName = (error instanceof FieldError) ? ((FieldError) error).getField() : error.getObjectName();
                    return ErrorResponseDto.ErrorDetail.builder()
                            .field(fieldName)
                            .message(error.getDefaultMessage())
                            .build();
                })
                .collect(Collectors.toList());

        ErrorResponseDto errorResponse = ErrorResponseDto.builder()
                .status(status.value())
                .error(status.getReasonPhrase())
                .message("–û—à–∏–±–∫–∞ –≤–∞–ª–∏–¥–∞—Ü–∏–∏ –≤—Ö–æ–¥–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø–æ–ª—è –∑–∞–ø—Ä–æ—Å–∞.")
                .path(request.getRequestURI())
                .timestamp(LocalDateTime.now())
                .details(errors)
                .build();

        log.warn("‚ö†Ô∏è –û—à–∏–±–∫–∞ –≤–∞–ª–∏–¥–∞—Ü–∏–∏ –¥–∞–Ω–Ω—ã—Ö –∑–∞–ø—Ä–æ—Å–∞: –°—Ç–∞—Ç—É—Å={} - '{}', –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ—à–∏–±–æ–∫={}. –ü—É—Ç—å='{}'",
                status.value(), status.getReasonPhrase(), errors.size(), request.getRequestURI());
        return new ResponseEntity<>(errorResponse, status);
    }

    /**
     * <p><b>–û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫ —Ü–µ–ª–æ—Å—Ç–Ω–æ—Å—Ç–∏ –¥–∞–Ω–Ω—ã—Ö ({@link DataIntegrityViolationException}) üîó</b></p>
     * <p>
     *     –ü–µ—Ä–µ—Ö–≤–∞—Ç—ã–≤–∞–µ—Ç –∏—Å–∫–ª—é—á–µ–Ω–∏—è, —Å–≤—è–∑–∞–Ω–Ω—ã–µ —Å –Ω–∞—Ä—É—à–µ–Ω–∏–µ–º –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–π –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö,
     *     –Ω–∞–ø—Ä–∏–º–µ—Ä, –ø–æ–ø—ã—Ç–∫–∞ –≤—Å—Ç–∞–≤–∏—Ç—å –∑–∞–ø–∏—Å—å —Å –Ω–µ—É–Ω–∏–∫–∞–ª—å–Ω—ã–º –∑–Ω–∞—á–µ–Ω–∏–µ–º –≤ —É–Ω–∏–∫–∞–ª—å–Ω–æ–µ –ø–æ–ª–µ
     *     (—á–∞—Å—Ç–æ —ç—Ç–æ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç –ø—Ä–∏ –ø–æ–ø—ã—Ç–∫–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–º email).
     *     –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å—Ç–∞—Ç—É—Å 409 Conflict.
     * </p>
     *
     * @param ex {@link DataIntegrityViolationException} - –∏—Å–∫–ª—é—á–µ–Ω–∏–µ –æ –Ω–∞—Ä—É—à–µ–Ω–∏–∏ —Ü–µ–ª–æ—Å—Ç–Ω–æ—Å—Ç–∏ –¥–∞–Ω–Ω—ã—Ö.
     * @param request {@link HttpServletRequest} - —Ç–µ–∫—É—â–∏–π HTTP –∑–∞–ø—Ä–æ—Å.
     * @return {@link ResponseEntity} —Å {@link ErrorResponseDto} –∏ HTTP —Å—Ç–∞—Ç—É—Å–æ–º 409 Conflict.
     */
    @ExceptionHandler(DataIntegrityViolationException.class)
    public ResponseEntity<ErrorResponseDto> handleDataIntegrityViolationException(DataIntegrityViolationException ex, HttpServletRequest request) {
        HttpStatus status = HttpStatus.CONFLICT;
        String errorMessage = "–ö–æ–Ω—Ñ–ª–∏–∫—Ç –¥–∞–Ω–Ω—ã—Ö: –ó–∞–ø–∏—Å—å —Å —Ç–∞–∫–∏–º–∏ —É–Ω–∏–∫–∞–ª—å–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏ —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –∏–ª–∏ –Ω–∞—Ä—É—à–µ–Ω–æ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ —Ü–µ–ª–æ—Å—Ç–Ω–æ—Å—Ç–∏.";

        if (ex.getCause() != null && ex.getCause().getMessage() != null) {
            String rootCauseMessage = ex.getCause().getMessage();
            if (rootCauseMessage.contains("duplicate key") || rootCauseMessage.contains("unique constraint")) {
                errorMessage = "–ö–æ–Ω—Ñ–ª–∏–∫—Ç: –≠–ª–µ–º–µ–Ω—Ç —Å —Ç–∞–∫–∏–º–∏ –¥–∞–Ω–Ω—ã–º–∏ —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç. " + rootCauseMessage.substring(0, Math.min(rootCauseMessage.length(), 100)) + "...";
            }
        }

        ErrorResponseDto errorResponse = ErrorResponseDto.builder()
                .status(status.value())
                .error(status.getReasonPhrase())
                .message(errorMessage)
                .path(request.getRequestURI())
                .timestamp(LocalDateTime.now())
                .build();

        log.error("üí• –û—à–∏–±–∫–∞ —Ü–µ–ª–æ—Å—Ç–Ω–æ—Å—Ç–∏ –¥–∞–Ω–Ω—ã—Ö: –°—Ç–∞—Ç—É—Å={} - '{}', –°–æ–æ–±—â–µ–Ω–∏–µ='{}', –ü—É—Ç—å='{}', –ü—Ä–∏—á–∏–Ω–∞='{}'",
                status.value(), status.getReasonPhrase(), errorMessage, request.getRequestURI(), ex.getMessage());
        return new ResponseEntity<>(errorResponse, status);
    }


    /**
     * <p><b>–£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –≤—Å–µ—Ö –æ—Å—Ç–∞–ª—å–Ω—ã—Ö –∏—Å–∫–ª—é—á–µ–Ω–∏–π ({@link Exception}) üêû</b></p>
     * <p>
     *     –≠—Ç–æ "–∑–∞–ø–∞—Å–Ω–æ–π" –æ–±—Ä–∞–±–æ—Ç—á–∏–∫, –∫–æ—Ç–æ—Ä—ã–π –ø–µ—Ä–µ—Ö–≤–∞—Ç—ã–≤–∞–µ—Ç –ª—é–±—ã–µ –¥—Ä—É–≥–∏–µ –Ω–µ–ø—Ä–µ–¥–≤–∏–¥–µ–Ω–Ω—ã–µ –æ—à–∏–±–∫–∏,
     *     –∫–æ—Ç–æ—Ä—ã–µ –Ω–µ –±—ã–ª–∏ –ø–æ–π–º–∞–Ω—ã –±–æ–ª–µ–µ —Å–ø–µ—Ü–∏—Ñ–∏—á–Ω—ã–º–∏ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞–º–∏.
     *     –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å—Ç–∞—Ç—É—Å 500 Internal Server Error, —Å–∫—Ä—ã–≤–∞—è –≤–Ω—É—Ç—Ä–µ–Ω–Ω–∏–µ –¥–µ—Ç–∞–ª–∏ –¥–ª—è –∫–ª–∏–µ–Ω—Ç–∞,
     *     –Ω–æ –ª–æ–≥–∏—Ä—É—è –ø–æ–ª–Ω—ã–π —Å—Ç–µ–∫ –≤—ã–∑–æ–≤–æ–≤ –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏.
     * </p>
     *
     * @param ex {@link Exception} - –ª—é–±–æ–µ –¥—Ä—É–≥–æ–µ –Ω–µ–æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω–æ–µ –∏—Å–∫–ª—é—á–µ–Ω–∏–µ.
     * @param request {@link HttpServletRequest} - —Ç–µ–∫—É—â–∏–π HTTP –∑–∞–ø—Ä–æ—Å.
     * @return {@link ResponseEntity} —Å {@link ErrorResponseDto} –∏ HTTP —Å—Ç–∞—Ç—É—Å–æ–º 500 Internal Server Error.
     */
    @ExceptionHandler(Exception.class)
    public ResponseEntity<ErrorResponseDto> handleAllUncaughtExceptions(Exception ex, HttpServletRequest request) {
        HttpStatus status = HttpStatus.INTERNAL_SERVER_ERROR;
        ErrorResponseDto errorResponse = ErrorResponseDto.builder()
                .status(status.value())
                .error(status.getReasonPhrase())
                .message("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –Ω–µ–ø—Ä–µ–¥–≤–∏–¥–µ–Ω–Ω–∞—è –æ—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ –∏–ª–∏ –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –≤ —Å–ª—É–∂–±—É –ø–æ–¥–¥–µ—Ä–∂–∫–∏.")
                .path(request.getRequestURI())
                .timestamp(LocalDateTime.now())
                .build();

        log.error("‚ùå –ù–µ–ø—Ä–µ–¥–≤–∏–¥–µ–Ω–Ω–∞—è –æ—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞: –°—Ç–∞—Ç—É—Å={} - '{}', –ü—É—Ç—å='{}'",
                status.value(), status.getReasonPhrase(), request.getRequestURI(), ex);
        return new ResponseEntity<>(errorResponse, status);
    }

    /**
     * <p><b>–û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫ –¥–æ—Å—Ç—É–ø–∞ ({@link AccessDeniedException}) üö´</b></p>
     * <p>
     *     –ü–µ—Ä–µ—Ö–≤–∞—Ç—ã–≤–∞–µ—Ç –∏—Å–∫–ª—é—á–µ–Ω–∏—è Spring Security, –≤–æ–∑–Ω–∏–∫–∞—é—â–∏–µ, –∫–æ–≥–¥–∞ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
     *     (–∏–º–µ—é—â–∏–π –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω—ã–π —Ç–æ–∫–µ–Ω) –ø—ã—Ç–∞–µ—Ç—Å—è –ø–æ–ª—É—á–∏—Ç—å –¥–æ—Å—Ç—É–ø –∫ —Ä–µ—Å—É—Ä—Å—É, –Ω–∞ –∫–æ—Ç–æ—Ä—ã–π —É –Ω–µ–≥–æ
     *     –Ω–µ—Ç –¥–æ—Å—Ç–∞—Ç–æ—á–Ω—ã—Ö –ø—Ä–∞–≤ (–Ω–∞–ø—Ä–∏–º–µ—Ä, —ç–Ω–¥–ø–æ–∏–Ω—Ç—ã, –∑–∞—â–∏—â–µ–Ω–Ω—ã–µ `@PreAuthorize("hasRole('ADMIN')")`,
     *     –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ —è–≤–ª—è–µ—Ç—Å—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º).
     *     –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç HTTP —Å—Ç–∞—Ç—É—Å **403 Forbidden**.
     * </p>
     *
     * @param ex {@link AccessDeniedException} - –∏—Å–∫–ª—é—á–µ–Ω–∏–µ, —É–∫–∞–∑—ã–≤–∞—é—â–µ–µ –Ω–∞ –æ—Ç–∫–∞–∑ –≤ –¥–æ—Å—Ç—É–ø–µ.
     * @param request {@link HttpServletRequest} - —Ç–µ–∫—É—â–∏–π HTTP –∑–∞–ø—Ä–æ—Å.
     * @return {@link ResponseEntity} —Å {@link ErrorResponseDto} –∏ HTTP —Å—Ç–∞—Ç—É—Å–æ–º 403 Forbidden.
     */
    @ExceptionHandler(AccessDeniedException.class)
    public ResponseEntity<ErrorResponseDto> handleAccessDeniedException(AccessDeniedException ex, HttpServletRequest request) {
        HttpStatus status = HttpStatus.FORBIDDEN;
        ErrorResponseDto errorResponse = ErrorResponseDto.builder()
                .status(status.value())
                .error(status.getReasonPhrase())
                .message("–î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â–µ–Ω: —É –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —ç—Ç–æ–π –æ–ø–µ—Ä–∞—Ü–∏–∏.")
                .path(request.getRequestURI())
                .timestamp(LocalDateTime.now())
                .build();

        log.warn("üö´ –î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â–µ–Ω: –°—Ç–∞—Ç—É—Å={} - '{}', –°–æ–æ–±—â–µ–Ω–∏–µ='{}', –ü—É—Ç—å='{}'",
                status.value(), status.getReasonPhrase(), ex.getMessage(), request.getRequestURI());
        return new ResponseEntity<>(errorResponse, status);
    }
}