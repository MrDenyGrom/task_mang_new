package com.example.taskmanagement.service;

import com.example.taskmanagement.config.UserDetail;
import com.example.taskmanagement.model.AppUser;
import com.example.taskmanagement.repository.UserRepository;
import jakarta.validation.constraints.NotNull;
import lombok.RequiredArgsConstructor;
import lombok.extern.slf4j.Slf4j;
import org.springframework.security.core.userdetails.UserDetails;
import org.springframework.security.core.userdetails.UserDetailsService;
import org.springframework.security.core.userdetails.UsernameNotFoundException;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

/**
 * <p><b>–°–µ—Ä–≤–∏—Å –¥–ª—è –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ —Å Spring Security üõ°Ô∏è</b></p>
 *
 * <p>
 *     –≠—Ç–æ—Ç —Å–µ—Ä–≤–∏—Å —è–≤–ª—è–µ—Ç—Å—è –∫–ª—é—á–µ–≤—ã–º –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–º –¥–ª—è –º–µ—Ö–∞–Ω–∏–∑–º–∞ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏.
 *     –û–Ω —Ä–µ–∞–ª–∏–∑—É–µ—Ç –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å {@link UserDetailsService}, –∫–æ—Ç–æ—Ä—ã–π Spring Security
 *     –∏—Å–ø–æ–ª—å–∑—É–µ—Ç –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ –≤ –ø—Ä–æ—Ü–µ—Å—Å–µ –≤—Ö–æ–¥–∞ –≤ —Å–∏—Å—Ç–µ–º—É.
 * </p>
 *
 * <p><b>–û—Å–Ω–æ–≤–Ω–∞—è –∑–∞–¥–∞—á–∞:</b></p>
 * <blockquote>
 *     –ù–∞–π—Ç–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö –ø–æ –µ–≥–æ –∏–º–µ–Ω–∏ (–≤ –¥–∞–Ω–Ω–æ–º —Å–ª—É—á–∞–µ, –ø–æ email)
 *     –∏ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–∏—Ç—å Spring Security –æ–±—ä–µ–∫—Ç {@link UserDetails}, —Å–æ–¥–µ—Ä–∂–∞—â–∏–π
 *     –≤—Å—é –Ω–µ–æ–±—Ö–æ–¥–∏–º—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —É—á–µ—Ç–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö –∏ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞ (—Ä–æ–ª–µ–π).
 * </blockquote>
 *
 * @see org.springframework.security.core.userdetails.UserDetailsService
 * @see com.example.taskmanagement.config.UserDetail
 * @see com.example.taskmanagement.model.AppUser
 */
@Service
@RequiredArgsConstructor
@Slf4j
public class UserDetailService implements UserDetailsService {

    private final UserRepository userRepository;

    /**
     * <p><b>–ó–∞–≥—Ä—É–∑–∫–∞ –î–∞–Ω–Ω—ã—Ö –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ Email üìß</b></p>
     * <p>
     *     –¶–µ–Ω—Ç—Ä–∞–ª—å–Ω—ã–π –º–µ—Ç–æ–¥, –∫–æ—Ç–æ—Ä—ã–π –≤—ã–∑—ã–≤–∞–µ—Ç—Å—è Spring Security –≤–æ –≤—Ä–µ–º—è –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏.
     *     –û–Ω –∏—â–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–∏ –ø–æ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω–æ–º—É email.
     * </p>
     * <blockquote>
     *     <p><b>–í–∞–∂–Ω–æ—Å—Ç—å —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏:</b> –ê–Ω–Ω–æ—Ç–∞—Ü–∏—è {@code @Transactional(readOnly = true)}
     *     –≥–∞—Ä–∞–Ω—Ç–∏—Ä—É–µ—Ç, —á—Ç–æ –≤—Å–µ –æ–ø–µ—Ä–∞—Ü–∏–∏ —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö, –≤–∫–ª—é—á–∞—è –ª–µ–Ω–∏–≤—É—é –∑–∞–≥—Ä—É–∑–∫—É
     *     —Å–≤—è–∑–∞–Ω–Ω—ã—Ö —Å—É—â–Ω–æ—Å—Ç–µ–π (–Ω–∞–ø—Ä–∏–º–µ—Ä, —Ä–æ–ª–µ–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è), –±—É–¥—É—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω—ã –≤ —Ä–∞–º–∫–∞—Ö
     *     –æ–¥–Ω–æ–π –∞–∫—Ç–∏–≤–Ω–æ–π —Å–µ—Å—Å–∏–∏ Hibernate. –≠—Ç–æ –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–∞–µ—Ç {@code LazyInitializationException}.</p>
     * </blockquote>
     *
     * @param email Email –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –∫–æ—Ç–æ—Ä—ã–π –ø—ã—Ç–∞–µ—Ç—Å—è –≤–æ–π—Ç–∏ –≤ —Å–∏—Å—Ç–µ–º—É.
     *              Spring Security –ø–µ—Ä–µ–¥–∞–µ—Ç —Å—é–¥–∞ –∑–Ω–∞—á–µ–Ω–∏–µ –∏–∑ –ø–æ–ª—è "username" —Ñ–æ—Ä–º—ã –≤—Ö–æ–¥–∞.
     *
     * @return {@link UserDetails} ‚Äî –æ–±—ä–µ–∫—Ç-–æ–±–µ—Ä—Ç–∫–∞ {@link UserDetail},
     *         —Å–æ–¥–µ—Ä–∂–∞—â–∏–π —Å—É—â–Ω–æ—Å—Ç—å {@link AppUser} –∏ –≤—Å—é –Ω–µ–æ–±—Ö–æ–¥–∏–º—É—é –¥–ª—è Spring Security
     *         –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é (–ø–∞—Ä–æ–ª—å, —Ä–æ–ª–∏, —Å—Ç–∞—Ç—É—Å –∞–∫–∫–∞—É–Ω—Ç–∞).
     *
     * @throws UsernameNotFoundException –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å —É–∫–∞–∑–∞–Ω–Ω—ã–º email –Ω–µ –±—ã–ª –Ω–∞–π–¥–µ–Ω
     *         –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö. –≠—Ç–æ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–µ –∏—Å–∫–ª—é—á–µ–Ω–∏–µ Spring Security, –∫–æ—Ç–æ—Ä–æ–µ
     *         –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç—Å—è —Ñ—Ä–µ–π–º–≤–æ—Ä–∫–æ–º.
     */
    @Override
    @Transactional(readOnly = true)
    public UserDetails loadUserByUsername(@NotNull String email) throws UsernameNotFoundException {
        log.debug("üì¢ –ü–æ–∏—Å–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ email '{}' –¥–ª—è –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏.", email);

        AppUser user = userRepository.findByEmail(email)
                .orElseThrow(() -> {
                    log.debug("‚ùå –ü–æ–ø—ã—Ç–∫–∞ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏ —Å –Ω–µ—Å—É—â–µ—Å—Ç–≤—É—é—â–∏–º email: '{}'", email);
                    return new UsernameNotFoundException("–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å email '" + email + "' –Ω–µ –Ω–∞–π–¥–µ–Ω.");
                });

        log.debug("‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å '{}' (ID: {}) —É—Å–ø–µ—à–Ω–æ –Ω–∞–π–¥–µ–Ω –¥–ª—è –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏.", user.getEmail(), user.getId());
        return new UserDetail(user);
    }
}