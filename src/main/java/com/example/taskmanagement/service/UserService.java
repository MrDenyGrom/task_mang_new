package com.example.taskmanagement.service;

import com.example.taskmanagement.dto.AllUserDTO;
import com.example.taskmanagement.dto.UpdateUserDTO;
import com.example.taskmanagement.model.AppUser;
import com.example.taskmanagement.repository.UserRepository;
import com.example.taskmanagement.security.JwtTokenProvider;
import lombok.RequiredArgsConstructor;
import lombok.extern.slf4j.Slf4j;
import org.springframework.http.HttpStatus;
import org.springframework.security.authentication.AuthenticationManager;
import org.springframework.security.authentication.UsernamePasswordAuthenticationToken;
import org.springframework.security.core.Authentication;
import org.springframework.security.core.AuthenticationException;
import org.springframework.security.crypto.password.PasswordEncoder;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;
import org.springframework.web.server.ResponseStatusException;

import java.util.List;
import java.util.stream.Collectors;

/**
 * <p><b>–°–µ—Ä–≤–∏—Å –¥–ª—è –£–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏ üë§</b></p>
 *
 * <p>
 *     –°–æ–¥–µ—Ä–∂–∏—Ç –æ—Å–Ω–æ–≤–Ω—É—é –±–∏–∑–Ω–µ—Å-–ª–æ–≥–∏–∫—É –¥–ª—è –≤—Å–µ—Ö –æ–ø–µ—Ä–∞—Ü–∏–π, —Å–≤—è–∑–∞–Ω–Ω—ã—Ö —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏:
 *     —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è, –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è, –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø—Ä–æ—Ñ–∏–ª—è (—Å–º–µ–Ω–∞ –ø–∞—Ä–æ–ª—è) –∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π.
 * </p>
 *
 * <p><b>–ü–æ–¥—Ö–æ–¥ –∫ –û–±—Ä–∞–±–æ—Ç–∫–µ –û—à–∏–±–æ–∫:</b></p>
 * <blockquote>
 *     –°–µ—Ä–≤–∏—Å –∞–∫—Ç–∏–≤–Ω–æ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç {@link ResponseStatusException} –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏
 *     –≤—Å–µ—Ö –æ–∂–∏–¥–∞–µ–º—ã—Ö –±–∏–∑–Ω–µ—Å-–æ—à–∏–±–æ–∫ (–Ω–∞–ø—Ä–∏–º–µ—Ä, "–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω", "–Ω–µ–≤–µ—Ä–Ω—ã–π –ø–∞—Ä–æ–ª—å", "email —É–∂–µ –∑–∞–Ω—è—Ç").
 *     –≠—Ç–æ –ø–æ–∑–≤–æ–ª—è–µ—Ç –∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä–∞–º –æ—Å—Ç–∞–≤–∞—Ç—å—Å—è "—á–∏—Å—Ç—ã–º–∏" –∏ —Ñ–æ–∫—É—Å–∏—Ä–æ–≤–∞—Ç—å—Å—è –Ω–∞ –º–∞—Ä—à—Ä—É—Ç–∏–∑–∞—Ü–∏–∏ –∑–∞–ø—Ä–æ—Å–æ–≤,
 *     –¥–µ–ª–µ–≥–∏—Ä—É—è —Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ HTTP-–æ—Ç–≤–µ—Ç–æ–≤ –æ–± –æ—à–∏–±–∫–∞—Ö —Ñ—Ä–µ–π–º–≤–æ—Ä–∫—É Spring (—á–µ—Ä–µ–∑ {@code @ControllerAdvice}).
 *     –ö–∞–∂–¥–∞—è –±–∏–∑–Ω–µ—Å-–æ—à–∏–±–∫–∞ –∏–º–µ–µ—Ç —É–Ω–∏–∫–∞–ª—å–Ω—ã–π –∫–æ–¥ –¥–ª—è —É–¥–æ–±—Å—Ç–≤–∞ —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥-—Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ –∏ –æ—Ç–ª–∞–¥–∫–∏.
 * </blockquote>
 */
@Service
@RequiredArgsConstructor
@Slf4j
public class UserService {

    private final AuthenticationManager authenticationManager;
    private final JwtTokenProvider jwtTokenProvider;
    private final UserRepository userRepository;
    private final PasswordEncoder passwordEncoder;

    /**
     * <p><b>–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –ù–æ–≤–æ–≥–æ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è</b></p>
     * <p>
     *     –°–æ–∑–¥–∞–µ—Ç –Ω–æ–≤—É—é —É—á–µ—Ç–Ω—É—é –∑–∞–ø–∏—Å—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è. –ü–µ—Ä–µ–¥ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ–º,
     *     –ø—Ä–æ–≤–µ—Ä—è–µ—Ç—Å—è —É–Ω–∏–∫–∞–ª—å–Ω–æ—Å—Ç—å email –∏ —Ö–µ—à–∏—Ä—É–µ—Ç—Å—è –ø–∞—Ä–æ–ª—å.
     * </p>
     *
     * @param newUser –û–±—ä–µ–∫—Ç {@link AppUser} —Å –Ω–µ–∑–∞—Ö–µ—à–∏—Ä–æ–≤–∞–Ω–Ω—ã–º –ø–∞—Ä–æ–ª–µ–º –∏ –¥—Ä—É–≥–∏–º–∏ –¥–∞–Ω–Ω—ã–º–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
     * @return –°–æ—Ö—Ä–∞–Ω–µ–Ω–Ω–∞—è —Å—É—â–Ω–æ—Å—Ç—å {@link AppUser} —Å —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–º ID –∏ —Ö–µ—à–∏—Ä–æ–≤–∞–Ω–Ω—ã–º –ø–∞—Ä–æ–ª–µ–º.
     * @throws ResponseStatusException —Å –∫–æ–¥–æ–º <b>409 CONFLICT</b> –∏ —Å–æ–æ–±—â–µ–Ω–∏–µ–º `USR-001`,
     *         –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å —É–∫–∞–∑–∞–Ω–Ω—ã–º email —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö.
     */
    @Transactional
    public AppUser registerUser(AppUser newUser) {
        if (userRepository.existsByEmail(newUser.getEmail())) {
            log.warn("üö® –ü–æ–ø—ã—Ç–∫–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ —Å —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–º email: {}", newUser.getEmail());
            throw new ResponseStatusException(HttpStatus.CONFLICT, "USR-001: –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å —Ç–∞–∫–∏–º email —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç");
        }
        newUser.setPassword(passwordEncoder.encode(newUser.getPassword()));
        AppUser savedUser = userRepository.save(newUser);
        log.info("‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å '{}' —É—Å–ø–µ—à–Ω–æ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω —Å ID {}", savedUser.getEmail(), savedUser.getId());
        return savedUser;
    }

    /**
     * <p><b>–ê—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è</b></p>
     * <p>
     *     –ü—Ä–æ–≤–µ—Ä—è–µ—Ç —É—á–µ—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (email –∏ –ø–∞—Ä–æ–ª—å) —á–µ—Ä–µ–∑ –º–µ—Ö–∞–Ω–∏–∑–º {@link AuthenticationManager}.
     *     –í —Å–ª—É—á–∞–µ —É—Å–ø–µ—à–Ω–æ–π –ø—Ä–æ–≤–µ—Ä–∫–∏ –≥–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç JWT —Ç–æ–∫–µ–Ω.
     * </p>
     *
     * @param email    Email –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –∏—Å–ø–æ–ª—å–∑—É–µ–º—ã–π –¥–ª—è –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏.
     * @param password –ü–∞—Ä–æ–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –æ—Ç–∫—Ä—ã—Ç–æ–º –≤–∏–¥–µ.
     * @return –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–π JWT (String), –∫–æ—Ç–æ—Ä—ã–π –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω –≤ –ø–æ—Å–ª–µ–¥—É—é—â–∏—Ö –∑–∞–ø—Ä–æ—Å–∞—Ö.
     * @throws ResponseStatusException —Å –∫–æ–¥–æ–º <b>401 UNAUTHORIZED</b> –∏ —Å–æ–æ–±—â–µ–Ω–∏–µ–º `AUTH-001`,
     *         –µ—Å–ª–∏ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω—ã –Ω–µ–≤–µ—Ä–Ω—ã–µ —É—á–µ—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ (email –∏–ª–∏ –ø–∞—Ä–æ–ª—å –Ω–µ —Å–æ–≤–ø–∞–¥–∞—é—Ç).
     */
    public String authenticateUser(String email, String password) {
        try {
            Authentication authentication = authenticationManager.authenticate(
                    new UsernamePasswordAuthenticationToken(email, password)
            );
            log.info("‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å '{}' —É—Å–ø–µ—à–Ω–æ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω.", authentication.getName());
            return jwtTokenProvider.generateToken(email);
        } catch (AuthenticationException e) {
            log.warn("‚ùå –û—à–∏–±–∫–∞ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è '{}': {}", email, e.getMessage());
            throw new ResponseStatusException(HttpStatus.UNAUTHORIZED, "AUTH-001: –ù–µ–≤–µ—Ä–Ω—ã–π email –∏–ª–∏ –ø–∞—Ä–æ–ª—å", e);
        }
    }

    /**
     * <p><b>–°–º–µ–Ω–∞ –ü–∞—Ä–æ–ª—è –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è</b></p>
     * <p>
     *     –ü–æ–∑–≤–æ–ª—è–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –æ–±–Ω–æ–≤–∏—Ç—å —Å–≤–æ–π –ø–∞—Ä–æ–ª—å. –¢—Ä–µ–±—É–µ—Ç —Ç–µ–∫—É—â–µ–≥–æ –ø–∞—Ä–æ–ª—è –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è
     *     –∏ –Ω–æ–≤–æ–≥–æ –ø–∞—Ä–æ–ª—è. –ü–∞—Ä–æ–ª—å –ø–µ—Ä–µ–¥ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ–º —Ö–µ—à–∏—Ä—É–µ—Ç—Å—è.
     * </p>
     *
     * @param email       Email —Ç–µ–∫—É—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, —á–µ–π –ø–∞—Ä–æ–ª—å –Ω—É–∂–Ω–æ —Å–º–µ–Ω–∏—Ç—å.
     * @param oldPassword –¢–µ–∫—É—â–∏–π (—Å—Ç–∞—Ä—ã–π) –ø–∞—Ä–æ–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –æ—Ç–∫—Ä—ã—Ç–æ–º –≤–∏–¥–µ. –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏.
     * @param newPassword –ù–æ–≤—ã–π –ø–∞—Ä–æ–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –æ—Ç–∫—Ä—ã—Ç–æ–º –≤–∏–¥–µ.
     * @throws ResponseStatusException
     *         <ul>
     *             <li><b>404 NOT_FOUND</b> (–∫–æ–¥ –æ—à–∏–±–∫–∏: `USR-002`): –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å —É–∫–∞–∑–∞–Ω–Ω—ã–º email –Ω–µ –Ω–∞–π–¥–µ–Ω.</li>
     *             <li><b>400 BAD_REQUEST</b> (–∫–æ–¥ –æ—à–∏–±–∫–∏: `USR-003`): –µ—Å–ª–∏ —Å—Ç–∞—Ä—ã–π –ø–∞—Ä–æ–ª—å —É–∫–∞–∑–∞–Ω –Ω–µ–≤–µ—Ä–Ω–æ –∏ –Ω–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç —Ç–µ–∫—É—â–µ–º—É.</li>
     *             <li><b>409 CONFLICT</b> (–∫–æ–¥ –æ—à–∏–±–∫–∏: `USR-004`): –µ—Å–ª–∏ –Ω–æ–≤—ã–π –ø–∞—Ä–æ–ª—å —Å–æ–≤–ø–∞–¥–∞–µ—Ç —Å —Ç–µ–∫—É—â–∏–º (—Å—Ç–∞—Ä—ã–º) –ø–∞—Ä–æ–ª–µ–º.</li>
     *         </ul>
     */
    @Transactional
    public void updatePassword(String email, String oldPassword, String newPassword) {
        if (oldPassword.equals(newPassword)) {
            log.warn("‚ùå –ü–æ–ø—ã—Ç–∫–∞ —Å–º–µ–Ω—ã –ø–∞—Ä–æ–ª—è –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è '{}': –Ω–æ–≤—ã–π –ø–∞—Ä–æ–ª—å —Å–æ–≤–ø–∞–¥–∞–µ—Ç —Å–æ —Å—Ç–∞—Ä—ã–º.", email);
            throw new ResponseStatusException(HttpStatus.CONFLICT, "USR-004: –ù–æ–≤—ã–π –ø–∞—Ä–æ–ª—å –Ω–µ –¥–æ–ª–∂–µ–Ω —Å–æ–≤–ø–∞–¥–∞—Ç—å —Å–æ —Å—Ç–∞—Ä—ã–º");
        }

        AppUser user = getUserByEmail(email);

        if (!passwordEncoder.matches(oldPassword, user.getPassword())) {
            log.warn("‚ùå –ü–æ–ø—ã—Ç–∫–∞ —Å–º–µ–Ω—ã –ø–∞—Ä–æ–ª—è –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è '{}': –≤–≤–µ–¥–µ–Ω –Ω–µ–≤–µ—Ä–Ω—ã–π —Å—Ç–∞—Ä—ã–π –ø–∞—Ä–æ–ª—å.", email);
            throw new ResponseStatusException(HttpStatus.BAD_REQUEST, "USR-003: –ù–µ–≤–µ—Ä–Ω—ã–π —Å—Ç–∞—Ä—ã–π –ø–∞—Ä–æ–ª—å");
        }

        user.setPassword(passwordEncoder.encode(newPassword));
        userRepository.save(user);
        log.info("‚úÖ –ü–∞—Ä–æ–ª—å –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è '{}' —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω.", email);
    }

    /**
     * <p><b>–ü–æ–ª—É—á–µ–Ω–∏–µ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ Email</b></p>
     * <p>
     *     –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã–π –º–µ—Ç–æ–¥ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å—É—â–Ω–æ—Å—Ç–∏ {@link AppUser} –ø–æ –µ—ë email.
     *     –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥—Ä—É–≥–∏–º–∏ –º–µ—Ç–æ–¥–∞–º–∏ —Å–µ—Ä–≤–∏—Å–∞ –¥–ª—è —Ü–µ–Ω—Ç—Ä–∞–ª–∏–∑–æ–≤–∞–Ω–Ω–æ–π –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Å–ª—É—á–∞—è "–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω".
     * </p>
     *
     * @param email Email –¥–ª—è –ø–æ–∏—Å–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
     * @return –ù–∞–π–¥–µ–Ω–Ω–∞—è —Å—É—â–Ω–æ—Å—Ç—å {@link AppUser}.
     * @throws ResponseStatusException —Å –∫–æ–¥–æ–º <b>404 NOT_FOUND</b> –∏ —Å–æ–æ–±—â–µ–Ω–∏–µ–º `USR-002`,
     *         –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å —É–∫–∞–∑–∞–Ω–Ω—ã–º email –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö.
     */
    @Transactional(readOnly = true)
    public AppUser getUserByEmail(String email) {
        return userRepository.findByEmail(email)
                .orElseThrow(() -> {
                    log.warn("üîç –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å email '{}' –Ω–µ –Ω–∞–π–¥–µ–Ω.", email);
                    return new ResponseStatusException(HttpStatus.NOT_FOUND, "USR-002: –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å email '" + email + "' –Ω–µ –Ω–∞–π–¥–µ–Ω");
                });
    }

    /**
     * <p><b>–ü–æ–ª—É—á–µ–Ω–∏–µ –°–ø–∏—Å–∫–∞ –í—Å–µ—Ö –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π (–¥–ª—è –∞–¥–º–∏–Ω–∞)</b></p>
     * <p>
     *     –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –≤ —Å–∏—Å—Ç–µ–º–µ.
     *     –í–æ–∑–≤—Ä–∞—â–∞—é—Ç—Å—è —Ç–æ–ª—å–∫–æ –ø—É–±–ª–∏—á–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ (ID, email, —Ä–æ–ª—å), –±–µ–∑ –ø–∞—Ä–æ–ª–µ–π.
     * </p>
     *
     * @return {@link List} DTO –æ–±—ä–µ–∫—Ç–æ–≤ {@link AllUserDTO}, –ø—Ä–µ–¥—Å—Ç–∞–≤–ª—è—é—â–∏—Ö –ø—É–±–ª–∏—á–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è—Ö.
     */
    @Transactional(readOnly = true)
    public List<AllUserDTO> getAllUserEmailsAndIds() {
        return userRepository.findAll().stream()
                .map(user -> new AllUserDTO(user.getId(), user.getEmail(), user.getRole()))
                .collect(Collectors.toList());
    }

    /**
     * <p><b>–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –†–æ–ª–∏ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (–¥–ª—è –∞–¥–º–∏–Ω–∞)</b></p>
     * <p>
     *     –û–±–Ω–æ–≤–ª—è–µ—Ç —Ä–æ–ª—å —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ –µ–≥–æ ID.
     *     –≠—Ç–æ—Ç –º–µ—Ç–æ–¥ –ø—Ä–µ–¥–Ω–∞–∑–Ω–∞—á–µ–Ω –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–∏–≤–Ω—ã—Ö —Ü–µ–ª–µ–π, –ø–æ–∑–≤–æ–ª—è—è `ADMIN` –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º
     *     –∏–∑–º–µ–Ω—è—Ç—å –ø—Ä–∏–≤–∏–ª–µ–≥–∏–∏ –¥—Ä—É–≥–∏—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π.
     * </p>
     *
     * @param userId        ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, —á—å—è —Ä–æ–ª—å –±—É–¥–µ—Ç –æ–±–Ω–æ–≤–ª–µ–Ω–∞.
     * @param updateUserDTO DTO {@link UpdateUserDTO}, —Å–æ–¥–µ—Ä–∂–∞—â–µ–µ –Ω–æ–≤—É—é —Ä–æ–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
     * @return –û–±–Ω–æ–≤–ª–µ–Ω–Ω–∞—è —Å—É—â–Ω–æ—Å—Ç—å {@link AppUser} —Å –Ω–æ–≤–æ–π —Ä–æ–ª—å—é.
     * @throws ResponseStatusException —Å –∫–æ–¥–æ–º <b>404 NOT_FOUND</b> –∏ —Å–æ–æ–±—â–µ–Ω–∏–µ–º `USR-002`,
     *         –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å —É–∫–∞–∑–∞–Ω–Ω—ã–º ID –Ω–µ –Ω–∞–π–¥–µ–Ω.
     */
    @Transactional
    public AppUser updateUser(Long userId, UpdateUserDTO updateUserDTO) {
        AppUser user = userRepository.findById(userId)
                .orElseThrow(() -> {
                    log.warn("‚ùå –ü–æ–ø—ã—Ç–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –Ω–µ—Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å ID: {}", userId);
                    return new ResponseStatusException(HttpStatus.NOT_FOUND, "USR-002: –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å ID " + userId + " –Ω–µ –Ω–∞–π–¥–µ–Ω");
                });
        user.setRole(updateUserDTO.getRole());
        AppUser updatedUser = userRepository.save(user);
        log.info("‚úÖ –†–æ–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å ID {} —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∞ –Ω–∞ '{}'.", userId, updatedUser.getRole());
        return updatedUser;
    }

    /**
     * <p><b>–£–¥–∞–ª–µ–Ω–∏–µ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (–¥–ª—è –∞–¥–º–∏–Ω–∞)</b></p>
     * <p>
     *     –ü–æ–ª–Ω–æ—Å—Ç—å—é —É–¥–∞–ª—è–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ —Å–∏—Å—Ç–µ–º—ã –ø–æ –µ–≥–æ —É–Ω–∏–∫–∞–ª—å–Ω–æ–º—É ID.
     *     –î–µ–π—Å—Ç–≤–∏–µ –Ω–µ–æ–±—Ä–∞—Ç–∏–º–æ.
     * </p>
     *
     * @param userId ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –∫–æ—Ç–æ—Ä–æ–≥–æ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ —É–¥–∞–ª–∏—Ç—å.
     * @throws ResponseStatusException —Å –∫–æ–¥–æ–º <b>404 NOT_FOUND</b> –∏ —Å–æ–æ–±—â–µ–Ω–∏–µ–º `USR-002`,
     *         –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å —É–∫–∞–∑–∞–Ω–Ω—ã–º ID –Ω–µ –Ω–∞–π–¥–µ–Ω –∏, —Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ, –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å —É–¥–∞–ª–µ–Ω.
     */
    @Transactional
    public void deleteUser(Long userId) {
        if (!userRepository.existsById(userId)) {
            log.warn("‚ùå –ü–æ–ø—ã—Ç–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è –Ω–µ—Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å ID: {}", userId);
            throw new ResponseStatusException(HttpStatus.NOT_FOUND, "USR-002: –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å ID " + userId + " –Ω–µ –Ω–∞–π–¥–µ–Ω");
        }
        userRepository.deleteById(userId);
        log.info("‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å ID {} –±—ã–ª —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω.", userId);
    }
}